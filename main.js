(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){var r=e.data,o=e.template,i=e.handleCardClick,a=e.handleAddLike,u=e.handleRemoveLike,c=e.handleDeleteButtonClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._template=o,this._card=this._getTemplate(),this._handleCardClick=i,this._handleAddLike=a,this._handleRemoveLike=u,this._handleDeleteButtonClick=c,this._userId=n,this._newCardImage=this._card.querySelector(".element__image"),this._cardLikeButton=this._card.querySelector(".element__like-button"),this._cardDeleteButton=this._card.querySelector(".element__delete-button"),this._likeCounter=this._card.querySelector(".element__like-label"),this.loadCard(r)}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._template).content.querySelector(".elements__list-item").cloneNode(!0)}},{key:"_setButtonsState",value:function(){this._setDeleteButtonState(),this._setLikeButtonState()}},{key:"_setLikeButtonState",value:function(){this._isLikedByUser?this._cardLikeButton.classList.add("element__like-button_active"):this._cardLikeButton.classList.remove("element__like-button_active"),this._likeCounter.textContent=this._likes.length}},{key:"_setDeleteButtonState",value:function(){this._userId!==this._ownerId&&this._cardDeleteButton.remove()}},{key:"loadCard",value:function(e){var t=this;this._title=e.name,this._image=e.link,this.cardId=e._id,this._ownerId=e.owner._id,this._likes=e.likes,this._isLikedByUser=this._likes.some((function(e){return e._id===t._userId})),this._setButtonsState()}},{key:"deleteCard",value:function(){this._card.remove(),this._card=null}},{key:"_setEventListeners",value:function(){var e=this;this._newCardImage.addEventListener("click",(function(){e._handleCardClick(e._title,e._image)})),this._cardLikeButton.addEventListener("click",(function(){e._isLikedByUser?e._handleRemoveLike(e):e._handleAddLike(e)})),this._cardDeleteButton.addEventListener("click",(function(){e._handleDeleteButtonClick(e)}))}},{key:"generateCard",value:function(){return this._setEventListeners(),this._newCardImage.src=this._image,this._card.querySelector(".element__title").textContent=this._title,this._newCardImage.alt=this._title,this._card}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._attributes=function(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}({},t),this._formElement=o,this._inputList=Array.from(this._formElement.querySelectorAll(this._attributes.inputSelector)),this._buttonElement=this._formElement.querySelector(this._attributes.submitButtonSelector)}var t,i;return t=e,(i=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._attributes.inputErrorClass),n.textContent=t,n.classList.add(this._attributes.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._attributes.inputErrorClass),t.classList.remove(this._attributes.errorClass),t.textContent=""}},{key:"_resetInputErrors",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableButton():(this._buttonElement.classList.remove(this._attributes.inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_disableButton",value:function(){this._buttonElement.classList.add(this._attributes.inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"resetFormValidation",value:function(){this._resetInputErrors(),this._disableButton()}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&o(t.prototype,i),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"render",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup_opened")||t.target.classList.contains("popup__close-button"))&&e.close()}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=h(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},p.apply(this,arguments)}function h(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function d(e,t){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},d(e,t)}function y(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._handleFormSubmit=r,t._form=t._popup.querySelector(".edit-form"),t._inputList=t._form.querySelectorAll(".edit-form__item"),t._submitButton=t._form.querySelector(".edit-form__submit-button"),t._submitButtonText=t._submitButton.textContent,t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formInputValues={},this._inputList.forEach((function(t){e._formInputValues[t.name]=t.value})),this._formInputValues}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"showLoading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._submitButtonText}},{key:"close",value:function(){p(_(a.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;p(_(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()}))}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=w(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function w(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function O(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"setSubmitHandler",value:function(e){this._callbackSubmit=e}},{key:"open",value:function(e){g(E(a.prototype),"open",this).call(this),this._callbackArg=e}},{key:"setEventListeners",value:function(){var e=this;g(E(a.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._callbackSubmit(e._callbackArg)}))}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=C(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function C(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function B(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function D(e){return D=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},D(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(r);if(o){var n=D(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupImage=t._popup.querySelector(".popup__image"),t._popupImageCaption=t._popup.querySelector(".popup__image-caption"),t}return t=a,(n=[{key:"open",value:function(e,t){this._popupImage.src=t,this._popupImage.alt=e,this._popupImageCaption.textContent=e,L(D(a.prototype),"open",this).call(this)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t){var n=t.userProfileName,r=t.userProfileDescription,o=t.userProfileAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=n,this._profileDescription=r,this._profileAvatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,about:this._profileDescription.textContent,avatar:this._profileAvatar.src}}},{key:"setUserInfo",value:function(e){this._profileName.textContent=e.name,this._profileDescription.textContent=e.about}},{key:"setUserAvatar",value:function(e){this._profileAvatar.src=e.avatar,this._profileAvatar.alt=e.name}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function T(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?q(Object(n),!0).forEach((function(t){x(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):q(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function x(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var F=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._serverUrl=t.serverUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfoApi",value:function(){return fetch("".concat(this._serverUrl,"/users/me"),{headers:this._headers}).then(this._getResponseData)}},{key:"editPageUserInfo",value:function(e){return fetch("".concat(this._serverUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(T({},e))}).then(this._getResponseData)}},{key:"editUserAvatar",value:function(e){return fetch("".concat(this._serverUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(T({},e))}).then(this._getResponseData)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._serverUrl,"/cards"),{headers:this._headers}).then(this._getResponseData)}},{key:"addCard",value:function(e){return fetch("".concat(this._serverUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(T({},e))}).then(this._getResponseData)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._serverUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._getResponseData)}},{key:"addLike",value:function(e){return fetch("".concat(this._serverUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._getResponseData)}},{key:"removeLike",value:function(e){return fetch("".concat(this._serverUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._getResponseData)}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),N={formSelector:".edit-form",inputSelector:".edit-form__item",submitButtonSelector:".edit-form__submit-button",inactiveButtonClass:"edit-form__submit-button_disabled",inputErrorClass:"edit-form__item_state_error",errorClass:"edit-form__input-error_visible"},H=document.querySelector(".profile__edit-button"),J=document.querySelector(".profile__add-button"),M=document.querySelector(".profile__avatar-edit-button"),z=document.querySelector(".profile__name"),$=document.querySelector(".profile__description"),G=document.querySelector(".profile__avatar"),K=document.querySelector("#profile-edit-form"),Q=document.querySelector("#place-form"),W=document.querySelector("#avatar-edit-form");function X(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Y,Z=new F({serverUrl:"https://mesto.nomoreparties.co/v1/cohort-48",headers:{authorization:"5d2947c9-bb9f-4c7f-aef0-c89bfe848fc0","Content-Type":"application/json"}});Promise.all([Z.getUserInfoApi(),Z.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return X(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?X(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Y=o,ee.setUserInfo(o),ee.setUserAvatar(o),ae.render(i)})).catch((function(e){console.log(e)}));var ee=new A({userProfileName:z,userProfileDescription:$,userProfileAvatar:G}),te=new b({popupSelector:".popup_type_profile-editing",handleFormSubmit:function(e){te.showLoading(!0),Z.editPageUserInfo(e).then((function(e){ee.setUserInfo(e),te.close()})).catch((function(e){console.log(e)})).finally((function(){te.showLoading(!1)}))}});te.setEventListeners();var ne=new b({popupSelector:".popup_type_avatar-editing",handleFormSubmit:function(e){ne.showLoading(!0),Z.editUserAvatar(e).then((function(e){ee.setUserAvatar(e),ne.close()})).catch((function(e){console.log(e)})).finally((function(){ne.showLoading(!1)}))}});ne.setEventListeners();var re=new R(".popup_type_image-opening");re.setEventListeners();var oe=new S(".popup_type_element-delete");oe.setSubmitHandler((function(e){Z.deleteCard(e.cardId).then((function(){e.deleteCard(),oe.close()})).catch((function(e){console.log(e)}))})),oe.setEventListeners();var ie=function(e){return new t({data:e,template:"#template-for-element",handleCardClick:function(e,t){re.open(e,t)},handleAddLike:function(e){Z.addLike(e.cardId).then((function(t){e.loadCard(t)})).catch((function(e){console.log(e)}))},handleRemoveLike:function(e){Z.removeLike(e.cardId).then((function(t){e.loadCard(t)})).catch((function(e){console.log(e)}))},handleDeleteButtonClick:function(e){oe.open(e)}},Y._id).generateCard()},ae=new u({renderer:function(e){ae.addItem(ie(e))}},".elements__list"),ue=new b({popupSelector:".popup_type_element-add",handleFormSubmit:function(e){ue.showLoading(!0),Z.addCard(e).then((function(e){ae.addItem(ie(e)),ue.close()})).catch((function(e){console.log(e)})).finally((function(){ue.showLoading(!1)}))}});ue.setEventListeners();var ce=new i(N,K),se=new i(N,Q),le=new i(N,W);se.enableValidation(),ce.enableValidation(),le.enableValidation(),H.addEventListener("click",(function(){var e=ee.getUserInfo();ce.resetFormValidation(),te.setInputValues(e),te.open()})),M.addEventListener("click",(function(){var e=ee.getUserInfo();le.resetFormValidation(),ne.setInputValues(e),ne.open()})),J.addEventListener("click",(function(){se.resetFormValidation(),ue.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,